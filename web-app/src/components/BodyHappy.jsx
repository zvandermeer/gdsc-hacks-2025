import React, { useState, useEffect } from 'react';

const BodyHappy = ({ style, duration = 0.5, loopDelay = 0 }) => {
  const [animationState, setAnimationState] = useState('normal');
  const [isAnimating, setIsAnimating] = useState(false);

  const svgPath = `
    M97.8114 0.0191315C130.375 -0.589748 154.388 13.3351 169.85 41.7935C174.355 50.4257 177.576 59.5197 179.513 69.0748C180.847 73.6388 182.932 77.8072 185.765 81.5787C189.269 86.0309 192.774 90.483 196.279 94.9351C201.329 102.504 204.834 110.745 206.794 119.659C207.727 126.097 207.727 132.539 206.794 138.983C206.224 142.679 204.803 145.994 202.531 148.929C200.031 151.745 196.953 152.645 193.296 151.629C191.842 151.191 190.421 150.671 189.033 150.066C181.047 168.804 167.69 182.207 148.964 190.277C144.586 192.051 140.18 193.71 135.749 195.251C135.799 199.224 135.894 203.203 136.033 207.186C140.98 208.924 145.859 210.866 150.669 213.011C152.161 214.507 152.492 216.261 151.663 218.269C150.6 219.63 149.226 220.151 147.543 219.832C142.608 217.861 137.634 216.014 132.623 214.291C131.983 214.328 131.367 214.47 130.776 214.716C127.745 216.327 124.714 217.937 121.683 219.547C118.103 220.698 116.255 219.419 116.141 215.712C116.524 214.38 117.33 213.385 118.557 212.727C121.776 211.023 124.902 209.176 127.934 207.186C128.218 203.781 128.313 200.371 128.219 196.956C117.23 199.022 106.146 199.732 94.9696 199.087C89.9048 198.629 84.884 197.966 79.9081 197.097C79.5801 200.438 79.5322 203.802 79.7655 207.186C83.1489 209.336 86.6071 211.372 90.1386 213.295C91.9639 214.875 92.2952 216.723 91.1327 218.837C90.1871 219.95 89.003 220.376 87.5809 220.116C83.5374 218.118 79.5108 216.081 75.5028 214.006C70.4861 215.742 65.5131 217.589 60.5839 219.547C57.6628 220.225 55.9577 219.088 55.4686 216.137C55.592 214.849 56.1603 213.806 57.1737 213.011C62.0194 210.955 66.8975 209.013 71.8085 207.186C71.8926 203.679 72.0352 200.173 72.2352 196.671C72.1406 196.103 72.0457 195.535 71.9511 194.966C54.7961 190.06 40.3498 180.966 28.6132 167.685C24.4583 162.314 20.9534 156.536 18.0985 150.35C13.1807 153.141 8.82278 152.478 5.02626 148.361C2.44685 144.697 0.931285 140.624 0.479382 136.141C-1.06284 124.149 1.11611 112.876 7.01551 102.324C8.24679 100.24 9.47858 98.1556 10.7099 96.0719C14.2006 91.3492 17.8005 86.7072 21.5087 82.1471C23.5948 79.3037 25.3946 76.2721 26.9081 73.0533C28.9394 64.7375 31.4971 56.5906 34.5809 48.6139C41.6027 32.2445 52.6388 19.3139 67.6884 9.82284C77.0787 4.46644 87.1201 1.19875 97.8114 0.0191315ZM100.369 7.69198C88.0213 8.69769 76.7485 12.7233 66.5516 19.7691C52.7067 30.5009 43.1862 44.2841 37.9911 61.1178C36.583 68.2786 34.2149 75.0993 30.8866 81.5787C26.6678 87.5529 22.3103 93.4263 17.8143 99.1978C15.5978 102.557 13.6084 106.062 11.8466 109.712C7.23734 120.055 6.47959 130.665 9.57313 141.541C10.2882 144.053 11.8517 144.858 14.2626 143.956C15.5887 143.293 16.9149 142.629 18.2411 141.966C30.4992 133.796 36.8929 122.287 37.4227 107.439C39.497 105.48 41.4862 105.575 43.3905 107.723C44.0895 109.747 44.2788 111.831 43.9589 113.975C42.304 127.333 36.2416 138.132 25.7714 146.372C25.5819 147.224 25.5819 148.077 25.7714 148.929C29.828 157.366 35.3701 164.707 42.3964 170.953C56.2117 181.929 71.9367 188.56 89.5702 190.845C111.766 193.651 132.795 189.956 152.658 179.762C165.903 172.58 175.612 162.113 181.786 148.361C182.141 147.629 182.236 146.871 182.07 146.087C171.425 137.779 165.268 126.886 163.599 113.407C162.957 110.722 163.573 108.401 165.446 106.444C167.886 105.489 169.638 106.2 170.703 108.576C170.928 116.585 173.296 123.88 177.808 130.458C182.284 136.973 188.205 141.615 195.569 144.382C196.356 144.31 196.972 143.93 197.416 143.246C199.672 137.586 200.525 131.713 199.974 125.627C198.686 115.665 195.18 106.571 189.459 98.3453C185.058 92.7635 180.795 87.0798 176.671 81.2945C173.398 74.6957 171.029 67.7805 169.566 60.5494C167.299 53.5536 164.268 46.9226 160.473 40.6568C146.639 18.5691 126.605 7.5807 100.369 7.69198Z
  `;

  const animationStyles = {
    normal: {
      transform: 'translateY(0px)',
    },
    squish: {
      transform: `translateY(-15px)`, // adjust 10px as needed
    },
  };

  const transitionStyle = `transform ${duration}s ease-in-out`;

  useEffect(() => {
    const intervalId = setInterval(() => {
      if (!isAnimating) {
        setIsAnimating(true);
        setAnimationState('squish');
        setTimeout(() => {
          setAnimationState('normal');
          setTimeout(() => {
            setIsAnimating(false);
          }, duration * 1000); // Wait for un-squish
        }, duration * 1000 + loopDelay * 1000); // Wait for squish and loop delay
      }
    }, (duration * 2 + loopDelay) * 1000); // Total cycle time

    return () => clearInterval(intervalId);
  }, [duration, loopDelay, isAnimating]);

  return (
      <svg
      style={style}
      width="200"
      height="250"
      viewBox="0 0 208 221"
      fill="none"
    >
      <path
        d={svgPath}
        fill="black"
        style={{
          transition: transitionStyle,
          ...animationStyles[animationState],
        }}
      />
    </svg>
  );
};

export default BodyHappy;